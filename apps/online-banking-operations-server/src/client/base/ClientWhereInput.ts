/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BankAccountListRelationFilter } from "../../bankAccount/base/BankAccountListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EmailListRelationFilter } from "../../email/base/EmailListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { PhoneNumberListRelationFilter } from "../../phoneNumber/base/PhoneNumberListRelationFilter";

@InputType()
class ClientWhereInput {
  @ApiProperty({
    required: false,
    type: () => BankAccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BankAccountListRelationFilter)
  @IsOptional()
  @Field(() => BankAccountListRelationFilter, {
    nullable: true,
  })
  bankAccounts?: BankAccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateOfBirth?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EmailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmailListRelationFilter)
  @IsOptional()
  @Field(() => EmailListRelationFilter, {
    nullable: true,
  })
  emails?: EmailListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  password?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PhoneNumberListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PhoneNumberListRelationFilter)
  @IsOptional()
  @Field(() => PhoneNumberListRelationFilter, {
    nullable: true,
  })
  phoneNumbers?: PhoneNumberListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  username?: StringNullableFilter;
}

export { ClientWhereInput as ClientWhereInput };
